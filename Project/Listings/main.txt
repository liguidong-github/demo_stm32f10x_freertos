; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\User -I..\STM32F10x_StdPeriph_Libraries -I..\STM32F10x_StdPeriph_Libraries\STM32F10x_StdPeriph_Driver\src -I..\STM32F10x_StdPeriph_Libraries\STM32F10x_StdPeriph_Driver\inc -I..\STM32F10x_StdPeriph_Libraries\CMSIS\CM3\CoreSupport -I..\STM32F10x_StdPeriph_Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\STM32F10x_StdPeriph_Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\FreeRTOS\Source -I..\FreeRTOS\Source\include -I..\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\FreeRTOS\Source\portable\MemMang -I..\FreeRTOS -I..\User\Bsp -I..\SEGGER_RTT\RTT -I.\RTE\_Demo -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\main.crf ..\User\main.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;58     	*/
;;;59     int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;60     {
;;;61     		
;;;62     	BaseType_t xReturned;
;;;63     	
;;;64     
;;;65     	
;;;66     	/* Configure the NVIC Preemption Priority Bits */  
;;;67     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;68     	
;;;69     	
;;;70     	//创建 LED 任务 
;;;71     	xReturned = xTaskCreate(
00000a  4811              LDR      r0,|L1.80|
00000c  2102              MOVS     r1,#2
00000e  4b11              LDR      r3,|L1.84|
000010  2280              MOVS     r2,#0x80
000012  e9cd1000          STRD     r1,r0,[sp,#0]
000016  a110              ADR      r1,|L1.88|
000018  4811              LDR      r0,|L1.96|
00001a  f7fffffe          BL       xTaskCreate
00001e  4604              MOV      r4,r0
;;;72     									TaskLED,             //任务函数的指针
;;;73     									"TaskLED",           //任务的名称
;;;74     									TASK_LED_STACK_SIZE, //堆栈大小 单位:2byre
;;;75     									( void * )(&task_sync_flag),         //传入参数
;;;76     									TASK_LED_PRIORITY,   //任务优先级
;;;77     									&task_led_handle );  //任务句柄
;;;78     
;;;79     	if( xReturned != pdPASS )
000020  2c01              CMP      r4,#1
000022  d001              BEQ      |L1.40|
;;;80     	{
;;;81     		while(1);
000024  bf00              NOP      
                  |L1.38|
000026  e7fe              B        |L1.38|
                  |L1.40|
;;;82     	}
;;;83     	
;;;84     	//创建 log 打印任务 
;;;85     	xReturned = xTaskCreate(
000028  480e              LDR      r0,|L1.100|
00002a  2101              MOVS     r1,#1
00002c  4b09              LDR      r3,|L1.84|
00002e  2280              MOVS     r2,#0x80
000030  e9cd1000          STRD     r1,r0,[sp,#0]
000034  a10c              ADR      r1,|L1.104|
000036  480e              LDR      r0,|L1.112|
000038  f7fffffe          BL       xTaskCreate
00003c  4604              MOV      r4,r0
;;;86     									TaskLog,             //任务函数的指针
;;;87     									"TaskLog",           //任务的名称
;;;88     									TASK_LOG_STACK_SIZE, //堆栈大小 单位:2byre
;;;89     									( void * )(&task_sync_flag),         //传入参数
;;;90     									TASK_LOG_PRIORITY,   //任务优先级
;;;91     									&task_log_handle );  //任务句柄
;;;92     
;;;93     	if( xReturned != pdPASS )
00003e  2c01              CMP      r4,#1
000040  d001              BEQ      |L1.70|
;;;94     	{
;;;95     		while(1);
000042  bf00              NOP      
                  |L1.68|
000044  e7fe              B        |L1.68|
                  |L1.70|
;;;96     	}
;;;97     	
;;;98     	//SHJD_RTT_printf("***************** SystemInit ******************\r\n");
;;;99     	
;;;100    	
;;;101    	vTaskStartScheduler(); //开始任务调度
000046  f7fffffe          BL       vTaskStartScheduler
;;;102    
;;;103    	/* Will only get here if there was not enough heap space to create the
;;;104    	idle task. */
;;;105    	return 0;
00004a  2000              MOVS     r0,#0
;;;106    }
00004c  bd1c              POP      {r2-r4,pc}
;;;107    
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      task_led_handle
                  |L1.84|
                          DCD      task_sync_flag
                  |L1.88|
000058  5461736b          DCB      "TaskLED",0
00005c  4c454400
                  |L1.96|
                          DCD      TaskLED
                  |L1.100|
                          DCD      task_log_handle
                  |L1.104|
000068  5461736b          DCB      "TaskLog",0
00006c  4c6f6700
                  |L1.112|
                          DCD      TaskLog

                          AREA ||.data||, DATA, ALIGN=2

                  task_led_handle
                          DCD      0x00000000
                  task_log_handle
                          DCD      0x00000000
                  task_sync_flag
000008  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
